{"version":3,"sources":["assets/Sean_Kim_CV.pdf","assets/LIFO_Korean.pdf","fonts/Raleway-SemiBold.ttf","App.js","serviceWorker.js","index.js"],"names":["module","exports","getStarPos","w","h","mouseX","mouseY","indic","stars","count","tempW","tempH","i","xCoor","Math","random","yCoor","star","origX","origY","x","y","dist","hypot","brightnessAmp","sizeAmp","brightness","origSize","size","push","StarsCanvas","ref","useRef","useState","width","window","innerWidth","height","innerHeight","windowSize","setWindowSize","mousePos","setMousePos","starsPos","setStarsPos","updateWidthAndHeight","updateMousePos","e","length","updateStarBrightness","useEffect","addEventListener","removeEventListener","requestId","canvas","current","c","getContext","ratio","context","backingStore","backingStorePixelRatio","webkitBackingStorePixelRatio","mozBackingStorePixelRatio","msBackingStorePixelRatio","oBackingStorePixelRatio","devicePixelRatio","getPixelRatio","squareStarsFn","starElem","this","starSpeed","draw","shadowColor","shadowBlur","beginPath","rect","fillStyle","fill","update","randNum1","randNum2","upDownStill","leftRightStill","abs","style","render","clearRect","requestAnimationFrame","cancelAnimationFrame","className","data-paper-resize","App","id","target","href","resumepdf","LIFOpdf","Boolean","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.02c0a542.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Sean_Kim_CV.536fb129.pdf\";","module.exports = __webpack_public_path__ + \"static/media/LIFO_Korean.aa48533e.pdf\";","module.exports = __webpack_public_path__ + \"static/media/Raleway-SemiBold.17ba6410.ttf\";","import React from 'react';\nimport resumepdf from './assets/Sean_Kim_CV.pdf';\nimport LIFOpdf from './assets/LIFO_Korean.pdf';\nimport './App.css';\nimport { useEffect } from 'react';\nimport { useRef } from 'react';\nimport { useState } from 'react';  \n\nconst getPixelRatio = context => {\n  var backingStore =\n  context.backingStorePixelRatio ||\n  context.webkitBackingStorePixelRatio ||\n  context.mozBackingStorePixelRatio ||\n  context.msBackingStorePixelRatio ||\n  context.oBackingStorePixelRatio ||\n  context.backingStorePixelRatio ||\n  1;\n  \n  return (window.devicePixelRatio || 1) / backingStore;\n};\n\n\n\nconst getStarPos = (w, h, mouseX, mouseY, indic) => {\n  var stars = [];\n  var count =  w * 0.1;\n  var tempW = w;\n  var tempH = h;\n  if (count > 400) count = 400;\n  for (var i=0; i<count; i++) {\n    const xCoor = Math.random()*tempW;\n    const yCoor = Math.random()*tempH;\n    \n    var star = {origX: xCoor, origY: yCoor, x: xCoor, y: yCoor};\n    var dist = Math.hypot(star.x - mouseX, star.y - mouseY);\n    var brightnessAmp = 0;\n    var sizeAmp = 0;\n    if(dist <= 20){\n      brightnessAmp = 0.5;\n      sizeAmp = 5;\n    }else if(dist < 100){\n      brightnessAmp = (20/dist)*0.5;\n      sizeAmp = (20/dist)*5;\n    }\n    star.brightness = 1 - brightnessAmp;\n    star.origSize = (Math.random()+0.3) * 5 + sizeAmp;\n    star.size = star.origSize;\n    stars.push( star );\n  }\n  return stars\n}\nconst updateStarBrightness = (stars, mouseX, mouseY) => {\n\n  for(var i =0; i < stars.length; i++){\n    var dist = Math.hypot(stars[i].x - mouseX, stars[i].y - mouseY);\n    var sizeAmp = 0;\n    var brightnessAmp = 0;\n    if(dist <= 20){\n      brightnessAmp = 0.5;\n      sizeAmp = 8;\n    }else if(dist < 100){\n      brightnessAmp = (20/dist)*0.5;\n      sizeAmp = (20/dist)*8;\n    }else{\n\n    }\n    stars[i].brightness = 1 - brightnessAmp;\n    stars[i].size = stars[i].origSize+sizeAmp;\n  }\n  return stars;\n  \n}\n// function Star(size, brightness, x, y){\n//   let ref = useRef();\n//   this.x = x;\n//   this.y = y;\n//   this.draw = function(){\n//     let canvas = ref.current;\n//     let c = canvas.getContext('2d');\n//     c.beginPath();\n//     c.moveTo(x,y);\n//     c.lineTo(x+size, y+size - 5);\n//     c.lineTo(x+size+size, y);\n//     c.lineTo(x+size+5, y+size);\n//     c.lineTo(x+size+size, y+size+size);\n//     c.lineTo(x+size, y+size+5);\n//     c.lineTo(x, y+size+size);\n//     c.lineTo(x+size-5, y+size);\n//     c.lineTo(x,y);\n//     c.stroke();\n//   }\n// }\n\n// var star1 = Star(30, 0, 100,100);\n\nconst StarsCanvas = () => {\n  let ref = useRef();\n  \n  const [windowSize, setWindowSize] = useState({width: window.innerWidth, height: window.innerHeight});\n  const [mousePos, setMousePos] = useState({x : windowSize.width/2, y:windowSize.height/2});\n  const [starsPos, setStarsPos] = useState(getStarPos(window.innerWidth, window.innerHeight, mousePos.x, mousePos.y, 1));\n\n  const updateWidthAndHeight = () => {\n    setWindowSize({width: window.innerWidth, height: window.innerHeight});\n    setStarsPos(getStarPos(window.innerWidth, window.innerHeight, window.innerWidth, window.innerHeight, 2));\n  };\n  const updateMousePos = (e) => {\n    //set moustX and Y to updated mouse location\n    setMousePos({x: e.x, y: e.y});\n    setStarsPos(updateStarBrightness(starsPos, e.x, e.y));\n  }\n\n  // var stars = [];\n  // var r = Math.min(windowSize.width, windowSize.height) * 1;\n  // var count =  windowSize.width * 0.1;\n  // if (count > 200) count = 200;\n  // for (var i=0; i<count; i++) {\n  //   var star = {x: Math.random()*r-Math.random()*r, y: Math.random()*r-Math.random()*r };\n  //   star.brightness = 0.1\n  //   stars.push( star );\n  // }\n\n\n  useEffect(() => {\n    window.addEventListener(\"mousemove\", updateMousePos);\n    return () => {\n      window.removeEventListener(\"mousemove\", updateMousePos);\n    };\n  });\n\n  useEffect(() => {\n    window.addEventListener(\"resize\", updateWidthAndHeight);\n    return () => {\n      window.removeEventListener(\"resize\", updateWidthAndHeight);\n    };\n  });\n\n\n  useEffect(() => {\n    let canvas = ref.current;\n    let c = canvas.getContext('2d');\n\n    let ratio = getPixelRatio(c);\n\n    canvas.width = windowSize.width * ratio;\n    canvas.height = windowSize.height * ratio;\n    canvas.style.width = `${windowSize.width}px`;\n    canvas.style.height = `${windowSize.height}px`;\n\n    function starFn(starElem){\n      this.x = starElem.x * ratio;\n      this.y = starElem.y * ratio;\n      this.size = starElem.size;\n      this.brightness = starElem.brightness;\n      this.shiningConstant = starElem.shiningConstant;\n\n\n      this.draw = function(){\n        \n\n        c.beginPath();\n        c.moveTo(this.x,this.y);\n        c.lineTo(this.x+this.size, this.y+this.size - (this.size*2/5));\n        c.lineTo(this.x+this.size+this.size, this.y);\n        c.lineTo(this.x+this.size+(this.size*2/5), this.y+this.size);\n        c.lineTo(this.x+this.size+this.size, this.y+this.size+this.size);\n        c.lineTo(this.x+this.size, this.y+this.size+(this.size*2/5));\n        c.lineTo(this.x, this.y+this.size+this.size);\n        c.lineTo(this.x+this.size-(this.size*2/5), this.y+this.size);\n        c.lineTo(this.x,this.y);\n        c.fillStyle = \"rgba(255,255,255,\"+this.brightness+\")\";\n        c.fill();\n      }\n\n      \n    }\n\n    function squareStarsFn(starElem){\n      this.x = starElem.x * ratio;\n      this.y = starElem.y * ratio;\n      this.size = starElem.size;\n      this.brightness = starElem.brightness;\n      this.starSpeed = 0.25;\n      // this.shiningConstant = starElem.shiningConstant;\n      this.draw = function(){\n        c.shadowColor = \"rgb(255,255,255)\";\n        c.shadowBlur = 10;\n        c.beginPath();\n        c.rect(this.x-this.size/2, this.y-this.size/2, this.size, this.size);\n        c.fillStyle = \"rgba(255,255,255,1)\";\n        c.fill();\n      }\n      this.update = function(){\n        const randNum1 = Math.random() - 0.5;\n        const randNum2 = Math.random() - 0.5;\n\n        var upDownStill = 0;\n        if(randNum1 > 0.1){\n          upDownStill = this.starSpeed;\n        } else if(randNum1 < 0.1) {\n          upDownStill = -this.starSpeed;\n        }\n\n        var leftRightStill = 0;\n        if(randNum2 > 0.1){\n          leftRightStill = this.starSpeed;\n        } else if(randNum2 < 0.1) {\n          leftRightStill = -this.starSpeed;\n        }\n\n        if(this.x > (starElem.origX * ratio)  && Math.abs(this.x - starElem.origX * ratio )>= 5){\n          starElem.x -= 1/ratio;\n        } else if (this.x < (starElem.origX * ratio)  && Math.abs(this.x - starElem.origX * ratio ) >= 5){\n          starElem.x += 1/ratio;\n        } else{\n          starElem.x += leftRightStill/ratio;\n        }\n\n        if(this.y > (starElem.origY * ratio)  && Math.abs(this.y - starElem.origY * ratio )>= 5){\n          starElem.y -= 1/ratio;\n        } else if (this.y < (starElem.origY * ratio)  && Math.abs(this.y - starElem.origY * ratio ) >= 5){\n          starElem.y += 1/ratio;\n        } else{\n          starElem.y += upDownStill/ratio;\n        }\n\n        this.draw();\n\n      }\n    }\n\n    let requestId;\n    const render = () => {\n      c.clearRect(0, 0, canvas.width, canvas.height);\n      // c.beginPath();\n      // c.arc(\n      //    canvas.width / 2,\n      //    canvas.height / 2,\n      //   (canvas.height / 2) * Math.abs(Math.cos(i)),\n      //    0,\n      //    2 * Math.PI\n      // );\n      // c.fill();\n      // i += 0.05;\n      for(var i = 0; i < starsPos.length; i++){\n        // var star = new starFn(starsPos[i]);\n        // star.draw();\n        var sqrStar = new squareStarsFn(starsPos[i]);\n        sqrStar.update();\n        // let x, y, size, brightness;\n        // x = starsPos[i].x * ratio;\n        // y = starsPos[i].y * ratio;\n        // size = starsPos[i].size;\n\n        // c.beginPath();\n        // c.moveTo(x,y);\n        // c.lineTo(x+size, y+size - (size*2/5));\n        // c.lineTo(x+size+size, y);\n        // c.lineTo(x+size+(size*2/5), y+size);\n        // c.lineTo(x+size+size, y+size+size);\n        // c.lineTo(x+size, y+size+(size*2/5));\n        // c.lineTo(x, y+size+size);\n        // c.lineTo(x+size-(size*2/5), y+size);\n        // c.lineTo(x,y);\n        // c.fillStyle = \"rgba(255,255,255,\"+starsPos[i].brightness+\")\";\n        // c.fill();\n\n      }\n      requestId = requestAnimationFrame(render);\n    };\n    render();\n\n    return () => {\n      cancelAnimationFrame(requestId);\n    };\n  });\n  \n\n\n   \n   return (\n       <canvas\n           className=\"main-canvas\"\n           ref={ref} \n           data-paper-resize\n       />\n   );\n};\n\n\nfunction App(){\n return(<div>\n     <div className=\"title-container\">\n       <span>Hello, I'm</span><span id=\"nameTitle\"> Sean Kim</span>.<span></span><br/>\n       <span>I'm a Computer Engineering student.</span>\n       <div className=\"link-container\">\n         <a className=\"main-link\" target=\"_blank\" href=\"https://github.com/SeanKimCC\">Github</a>\n         <a className=\"main-link\" target=\"_blank\" href={resumepdf}>Resume</a>\n         <a className=\"hidden\" target=\"_blank\" href={LIFOpdf}>Resume</a>\n       </div>\n       \n      </div>\n     <StarsCanvas/>\n   </div>)\n}\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport './fonts/Raleway-SemiBold.ttf'\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}